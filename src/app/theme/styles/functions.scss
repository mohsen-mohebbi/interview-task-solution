@use 'sass:list';
@use 'sass:meta';
@use 'sass:string';
@use 'sass:math';

@function unpack($shorthand) {
  @if list.length($shorthand) == 1 {
    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);
  } @else if list.length($shorthand) == 2 {
    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);
  } @else if list.length($shorthand) == 3 {
    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);
  } @else {
    @return $shorthand;
  }
}
@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.02 .06 .09 .15 .20, $depth));

  @return 0 $primary-offset $blur $color;
}
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.14 .13 .13 .12 .12, $depth));

  @return 0 $primary-offset $blur $color;
}
@function is-length($value) {
  @return meta.type-of($value) != "null" and (string.slice($value + "", 1, 4) == "calc"
       or list.index(auto inherit initial 0, $value)
       or (meta.type-of($value) == "number" and not(math.is-unitless($value))));
}
