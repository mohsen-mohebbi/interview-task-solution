{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new user",
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find all users",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "operationId": "UsersController_getMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get current user",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/me/active-organization/{organizationId}": {
      "patch": {
        "operationId": "UsersController_setActiveOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Set active organization",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find one user by ID",
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update a user by ID",
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete a user by ID",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Register a new user",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Login a user",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Refresh access token",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Send password reset link",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Reset password via token",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "operationId": "AuthController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Change current password",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/organizations": {
      "post": {
        "operationId": "OrganizationsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create organization",
        "tags": [
          "organizations"
        ]
      },
      "get": {
        "operationId": "OrganizationsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get all organizations",
        "tags": [
          "organizations"
        ]
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "operationId": "OrganizationsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get organization by id",
        "tags": [
          "organizations"
        ]
      },
      "patch": {
        "operationId": "OrganizationsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update organization by id",
        "tags": [
          "organizations"
        ]
      },
      "delete": {
        "operationId": "OrganizationsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete organization by id",
        "tags": [
          "organizations"
        ]
      }
    },
    "/api/v1/organizations/email/{email}": {
      "get": {
        "operationId": "OrganizationsController_findByEmail",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get organization by email",
        "tags": [
          "organizations"
        ]
      }
    },
    "/api/v1/organizations/me": {
      "get": {
        "operationId": "OrganizationsController_findByUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get organizations of current user",
        "tags": [
          "organizations"
        ]
      }
    },
    "/api/v1/organizations/{id}/users/{userId}": {
      "delete": {
        "operationId": "OrganizationsController_removeUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveOrganizationUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Remove user from organization",
        "tags": [
          "organizations"
        ]
      }
    },
    "/api/v1/organizations/{id}/persons/{personId}": {
      "delete": {
        "operationId": "OrganizationsController_removePerson",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "personId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Remove person from organization",
        "tags": [
          "organizations"
        ]
      }
    },
    "/api/v1/organizations/{id}/persons": {
      "get": {
        "operationId": "OrganizationsController_getPersons",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get persons of organization",
        "tags": [
          "organizations"
        ]
      }
    },
    "/api/v1/persons": {
      "post": {
        "operationId": "PersonsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new person",
        "tags": [
          "persons"
        ]
      },
      "get": {
        "operationId": "PersonsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find all persons",
        "tags": [
          "persons"
        ]
      }
    },
    "/api/v1/persons/{id}": {
      "get": {
        "operationId": "PersonsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find one person by ID",
        "tags": [
          "persons"
        ]
      },
      "patch": {
        "operationId": "PersonsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePersonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update a person by ID",
        "tags": [
          "persons"
        ]
      },
      "delete": {
        "operationId": "PersonsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete a person by ID",
        "tags": [
          "persons"
        ]
      }
    },
    "/api/v1/venues": {
      "post": {
        "operationId": "VenuesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVenueDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new venue",
        "tags": [
          "venues"
        ]
      },
      "get": {
        "operationId": "VenuesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find all venues",
        "tags": [
          "venues"
        ]
      }
    },
    "/api/v1/venues/{id}": {
      "get": {
        "operationId": "VenuesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find one venue by ID",
        "tags": [
          "venues"
        ]
      },
      "patch": {
        "operationId": "VenuesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVenueDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update a venue by ID",
        "tags": [
          "venues"
        ]
      },
      "delete": {
        "operationId": "VenuesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete a venue by ID",
        "tags": [
          "venues"
        ]
      }
    },
    "/api/v1/businesses": {
      "post": {
        "operationId": "BusinessesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBusinessDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new business",
        "tags": [
          "businesses"
        ]
      },
      "get": {
        "operationId": "BusinessesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find all businesses",
        "tags": [
          "businesses"
        ]
      }
    },
    "/api/v1/businesses/{id}": {
      "get": {
        "operationId": "BusinessesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find one business by ID",
        "tags": [
          "businesses"
        ]
      },
      "patch": {
        "operationId": "BusinessesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBusinessDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update a business by ID",
        "tags": [
          "businesses"
        ]
      },
      "delete": {
        "operationId": "BusinessesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete a business by ID",
        "tags": [
          "businesses"
        ]
      }
    },
    "/api/v1/businesses/{id}/persons/{personId}": {
      "post": {
        "operationId": "BusinessesController_addPerson",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "personId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBusinessPersonDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Add person to business",
        "tags": [
          "businesses"
        ]
      }
    },
    "/api/v1/leads": {
      "post": {
        "operationId": "LeadsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeadDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create lead",
        "tags": [
          "leads"
        ]
      },
      "get": {
        "operationId": "LeadsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find all leads",
        "tags": [
          "leads"
        ]
      }
    },
    "/api/v1/leads/with-person": {
      "post": {
        "operationId": "LeadsController_createWithPerson",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeadWithPersonDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create lead with new person",
        "tags": [
          "leads"
        ]
      }
    },
    "/api/v1/leads/{id}": {
      "get": {
        "operationId": "LeadsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find one lead",
        "tags": [
          "leads"
        ]
      },
      "patch": {
        "operationId": "LeadsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLeadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update lead",
        "tags": [
          "leads"
        ]
      },
      "delete": {
        "operationId": "LeadsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete lead",
        "tags": [
          "leads"
        ]
      }
    },
    "/api/v1/leads/{id}/assign-handler": {
      "post": {
        "operationId": "LeadsController_assignHandler",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignHandlerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Assign handler to lead",
        "tags": [
          "leads"
        ]
      }
    },
    "/api/v1/leads/{id}/status": {
      "post": {
        "operationId": "LeadsController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLeadStatusDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Update lead status",
        "tags": [
          "leads"
        ]
      }
    },
    "/api/v1/leads/{id}/comments": {
      "post": {
        "operationId": "LeadsController_addComment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Add comment to lead",
        "tags": [
          "leads"
        ]
      }
    },
    "/api/v1/coupons": {
      "post": {
        "operationId": "CouponsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCouponDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new coupon",
        "tags": [
          "coupons"
        ]
      },
      "get": {
        "operationId": "CouponsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find all coupons",
        "tags": [
          "coupons"
        ]
      }
    },
    "/api/v1/coupons/{id}": {
      "get": {
        "operationId": "CouponsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find one coupon by ID",
        "tags": [
          "coupons"
        ]
      },
      "patch": {
        "operationId": "CouponsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCouponDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update a coupon by ID",
        "tags": [
          "coupons"
        ]
      },
      "delete": {
        "operationId": "CouponsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete a coupon by ID",
        "tags": [
          "coupons"
        ]
      }
    },
    "/api/v1/tickets": {
      "post": {
        "operationId": "TicketsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new ticket",
        "tags": [
          "tickets"
        ]
      },
      "get": {
        "operationId": "TicketsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find all tickets",
        "tags": [
          "tickets"
        ]
      }
    },
    "/api/v1/tickets/{id}": {
      "get": {
        "operationId": "TicketsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find one ticket by ID",
        "tags": [
          "tickets"
        ]
      },
      "patch": {
        "operationId": "TicketsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTicketDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update a ticket by ID",
        "tags": [
          "tickets"
        ]
      },
      "delete": {
        "operationId": "TicketsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete a ticket by ID",
        "tags": [
          "tickets"
        ]
      }
    },
    "/api/v1/orders": {
      "post": {
        "operationId": "OrdersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new order",
        "tags": [
          "orders"
        ]
      },
      "get": {
        "operationId": "OrdersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find all orders",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/v1/orders/with-person": {
      "post": {
        "operationId": "OrdersController_createWithPerson",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderWithPersonDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new order with person details",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/v1/orders/with-purchases": {
      "post": {
        "operationId": "OrdersController_createWithPurchases",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderWithPurchasesDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new order with ticket purchases",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/v1/orders/{id}": {
      "get": {
        "operationId": "OrdersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find one order by ID",
        "tags": [
          "orders"
        ]
      },
      "patch": {
        "operationId": "OrdersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update an order by ID",
        "tags": [
          "orders"
        ]
      },
      "delete": {
        "operationId": "OrdersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete an order by ID",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/v1/ticket-purchases": {
      "post": {
        "operationId": "TicketPurchasesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketPurchaseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a ticket purchase",
        "tags": [
          "ticket-purchases"
        ]
      },
      "get": {
        "operationId": "TicketPurchasesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find all ticket purchases",
        "tags": [
          "ticket-purchases"
        ]
      }
    },
    "/api/v1/ticket-purchases/bulk": {
      "post": {
        "operationId": "TicketPurchasesController_createMany",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyTicketPurchaseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create multiple ticket purchases",
        "tags": [
          "ticket-purchases"
        ]
      }
    },
    "/api/v1/ticket-purchases/{id}": {
      "get": {
        "operationId": "TicketPurchasesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find one ticket purchase by ID",
        "tags": [
          "ticket-purchases"
        ]
      },
      "patch": {
        "operationId": "TicketPurchasesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTicketPurchaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update a ticket purchase by ID",
        "tags": [
          "ticket-purchases"
        ]
      },
      "delete": {
        "operationId": "TicketPurchasesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete a ticket purchase by ID",
        "tags": [
          "ticket-purchases"
        ]
      }
    },
    "/api/v1/ticket-purchases/order/{orderId}": {
      "get": {
        "operationId": "TicketPurchasesController_findByOrder",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find purchases by order ID",
        "tags": [
          "ticket-purchases"
        ]
      }
    },
    "/api/v1/ticket-purchases/person/{personId}": {
      "get": {
        "operationId": "TicketPurchasesController_findByPerson",
        "parameters": [
          {
            "name": "personId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find purchases by person ID",
        "tags": [
          "ticket-purchases"
        ]
      }
    },
    "/api/v1/ticket-purchases/ticket/{ticketId}": {
      "get": {
        "operationId": "TicketPurchasesController_findByTicket",
        "parameters": [
          {
            "name": "ticketId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find purchases by ticket ID",
        "tags": [
          "ticket-purchases"
        ]
      }
    },
    "/api/v1/events": {
      "post": {
        "operationId": "EventsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new event",
        "tags": [
          "events"
        ]
      },
      "get": {
        "operationId": "EventsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find all events",
        "tags": [
          "events"
        ]
      }
    },
    "/api/v1/events/{id}": {
      "get": {
        "operationId": "EventsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Find one event by ID",
        "tags": [
          "events"
        ]
      },
      "patch": {
        "operationId": "EventsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update an event by ID",
        "tags": [
          "events"
        ]
      },
      "delete": {
        "operationId": "EventsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete an event by ID",
        "tags": [
          "events"
        ]
      }
    },
    "/api/v1/organizations/{id}/invitations": {
      "post": {
        "operationId": "OrganizationInvitationsController_invite",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationInvitationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Invite user to organization",
        "tags": [
          "organization-invitations"
        ]
      },
      "get": {
        "operationId": "OrganizationInvitationsController_getInvitations",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get organization invitations",
        "tags": [
          "organization-invitations"
        ]
      }
    },
    "/api/v1/organization-invitations/{id}/accept": {
      "post": {
        "operationId": "OrganizationInvitationsController_accept",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Accept organization invitation",
        "tags": [
          "organization-invitations"
        ]
      }
    },
    "/api/v1/organization-invitations/{id}/reject": {
      "post": {
        "operationId": "OrganizationInvitationsController_reject",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Reject organization invitation",
        "tags": [
          "organization-invitations"
        ]
      }
    }
  },
  "info": {
    "title": "Event Organizer CRUD API",
    "description": "API documentation for the Event Organizer CRUD system",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "users",
      "description": ""
    },
    {
      "name": "organizations",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "passwordHash": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "roles": {
            "type": "string",
            "enum": [
              "user",
              "admin",
              "participant"
            ]
          }
        },
        "required": [
          "email",
          "passwordHash",
          "firstName",
          "lastName"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "passwordHash": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalZip": {
            "type": "string"
          },
          "accountProfilePhotoUrl": {
            "type": "string"
          }
        }
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "firstName",
          "lastName"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "token",
          "password"
        ]
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "required": [
          "oldPassword",
          "newPassword"
        ]
      },
      "CreateOrganizationDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "businessName": {
            "type": "string"
          },
          "registrationNumber": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalZip": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "phoneCountryCode",
          "phone",
          "website",
          "businessName",
          "registrationNumber",
          "vatNumber",
          "industry",
          "address1",
          "address2",
          "city",
          "state",
          "country",
          "postalZip"
        ]
      },
      "RemoveOrganizationUserDto": {
        "type": "object",
        "properties": {
          "nextSuperAdminId": {
            "type": "string"
          }
        }
      },
      "UpdateOrganizationDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "businessName": {
            "type": "string"
          },
          "registrationNumber": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalZip": {
            "type": "string"
          }
        }
      },
      "CreatePersonDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalZip": {
            "type": "string"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "profileImageUrl": {
            "type": "string"
          },
          "coverImageUrl": {
            "type": "string"
          },
          "firstReferralSource": {
            "type": "string"
          },
          "firstReferralSourceId": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "UpdatePersonDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalZip": {
            "type": "string"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "profileImageUrl": {
            "type": "string"
          },
          "coverImageUrl": {
            "type": "string"
          },
          "firstReferralSource": {
            "type": "string"
          },
          "firstReferralSourceId": {
            "type": "string"
          }
        }
      },
      "CreateVenueDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "venueName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalZip": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "directions": {
            "type": "string"
          },
          "venueType": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logoImageUrl": {
            "type": "string"
          },
          "coverImageUrl": {
            "type": "string"
          },
          "imageGalleryUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "email"
        ]
      },
      "UpdateVenueDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "venueName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalZip": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "directions": {
            "type": "string"
          },
          "venueType": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logoImageUrl": {
            "type": "string"
          },
          "coverImageUrl": {
            "type": "string"
          },
          "imageGalleryUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateBusinessDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "businessName": {
            "type": "string"
          },
          "registrationNumber": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalZip": {
            "type": "string"
          },
          "logoImageUrl": {
            "type": "string"
          },
          "coverImageUrl": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "UpdateBusinessDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "businessName": {
            "type": "string"
          },
          "registrationNumber": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalZip": {
            "type": "string"
          },
          "logoImageUrl": {
            "type": "string"
          },
          "coverImageUrl": {
            "type": "string"
          }
        }
      },
      "AddBusinessPersonDto": {
        "type": "object",
        "properties": {
          "position": {
            "type": "string"
          }
        },
        "required": [
          "position"
        ]
      },
      "CreateLeadDto": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "person": {
            "$ref": "#/components/schemas/CreatePersonDto"
          },
          "referralSource": {
            "type": "string"
          },
          "referralValue": {
            "type": "string"
          },
          "utmCode": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          }
        },
        "required": [
          "eventId"
        ]
      },
      "CreateLeadOnlyDto": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string"
          },
          "referralSource": {
            "type": "string"
          },
          "referralValue": {
            "type": "string"
          },
          "utmCode": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          }
        },
        "required": [
          "eventId"
        ]
      },
      "CreateLeadWithPersonDto": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/CreatePersonDto"
          },
          "lead": {
            "$ref": "#/components/schemas/CreateLeadOnlyDto"
          }
        },
        "required": [
          "person",
          "lead"
        ]
      },
      "UpdateLeadDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "referralSource": {
            "type": "string"
          },
          "referralValue": {
            "type": "string"
          },
          "utmCode": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "AssignHandlerDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "userId"
        ]
      },
      "UpdateLeadStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "AddCommentDto": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          }
        },
        "required": [
          "comment"
        ]
      },
      "CreateCouponDto": {
        "type": "object",
        "properties": {
          "ticketIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "couponCode": {
            "type": "string"
          },
          "discountType": {
            "type": "string",
            "enum": [
              "Percentage",
              "Fixed"
            ]
          },
          "discountAmount": {
            "type": "number"
          },
          "expiryDate": {
            "type": "string"
          },
          "usageLimit": {
            "type": "number"
          },
          "isStandalone": {
            "type": "boolean"
          }
        },
        "required": [
          "ticketIds",
          "couponCode",
          "discountType",
          "discountAmount",
          "expiryDate"
        ]
      },
      "UpdateCouponDto": {
        "type": "object",
        "properties": {
          "ticketIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "couponCode": {
            "type": "string"
          },
          "discountType": {
            "type": "string",
            "enum": [
              "Percentage",
              "Fixed"
            ]
          },
          "discountAmount": {
            "type": "number"
          },
          "expiryDate": {
            "type": "string"
          },
          "usageLimit": {
            "type": "number"
          },
          "isStandalone": {
            "type": "boolean"
          }
        }
      },
      "CreateTicketDto": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "postfix": {
            "type": "string"
          },
          "ticketName": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "capacity": {
            "type": "number"
          },
          "primaryImageUrl": {
            "type": "string"
          }
        },
        "required": [
          "eventId",
          "prefix",
          "postfix",
          "ticketName",
          "price",
          "currency",
          "capacity"
        ]
      },
      "UpdateTicketDto": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "postfix": {
            "type": "string"
          },
          "ticketName": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "capacity": {
            "type": "number"
          },
          "primaryImageUrl": {
            "type": "string"
          }
        }
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "string"
          },
          "couponCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalPaid": {
            "type": "number"
          },
          "totalTax": {
            "type": "number"
          },
          "paymentMethod": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          },
          "billingAddress1": {
            "type": "string"
          },
          "billingAddress2": {
            "type": "string"
          },
          "billingCity": {
            "type": "string"
          },
          "billingState": {
            "type": "string"
          },
          "billingPostalZip": {
            "type": "string"
          },
          "billingCountry": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          }
        },
        "required": [
          "personId",
          "couponCodes",
          "totalPaid",
          "totalTax",
          "paymentMethod",
          "transactionId",
          "billingAddress1",
          "billingCity",
          "billingState",
          "billingPostalZip",
          "billingCountry",
          "ipAddress"
        ]
      },
      "CreateOrderOnlyDto": {
        "type": "object",
        "properties": {
          "couponCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalPaid": {
            "type": "number"
          },
          "totalTax": {
            "type": "number"
          },
          "paymentMethod": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          },
          "billingAddress1": {
            "type": "string"
          },
          "billingAddress2": {
            "type": "string"
          },
          "billingCity": {
            "type": "string"
          },
          "billingState": {
            "type": "string"
          },
          "billingPostalZip": {
            "type": "string"
          },
          "billingCountry": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          }
        },
        "required": [
          "couponCodes",
          "totalPaid",
          "totalTax",
          "paymentMethod",
          "transactionId",
          "billingAddress1",
          "billingCity",
          "billingState",
          "billingPostalZip",
          "billingCountry",
          "ipAddress"
        ]
      },
      "CreateOrderWithPersonDto": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/CreatePersonDto"
          },
          "order": {
            "$ref": "#/components/schemas/CreateOrderOnlyDto"
          }
        },
        "required": [
          "person",
          "order"
        ]
      },
      "CreateTicketPurchaseWithPersonDto": {
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "string"
          },
          "amountPaid": {
            "type": "number"
          },
          "person": {
            "$ref": "#/components/schemas/CreatePersonDto"
          }
        },
        "required": [
          "ticketId",
          "amountPaid",
          "person"
        ]
      },
      "CreateOrderWithPurchasesDto": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/CreatePersonDto"
          },
          "order": {
            "$ref": "#/components/schemas/CreateOrderOnlyDto"
          },
          "purchases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTicketPurchaseWithPersonDto"
            }
          }
        },
        "required": [
          "person",
          "order",
          "purchases"
        ]
      },
      "UpdateOrderDto": {
        "type": "object",
        "properties": {
          "orderStatus": {
            "type": "string",
            "enum": [
              "Pending",
              "Paid",
              "Denied",
              "Cancelled",
              "Deleted"
            ]
          },
          "couponCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalPaid": {
            "type": "number"
          },
          "totalTax": {
            "type": "number"
          },
          "paymentMethod": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          },
          "billingAddress1": {
            "type": "string"
          },
          "billingAddress2": {
            "type": "string"
          },
          "billingCity": {
            "type": "string"
          },
          "billingState": {
            "type": "string"
          },
          "billingPostalZip": {
            "type": "string"
          },
          "billingCountry": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          },
          "datePaid": {
            "type": "string"
          }
        }
      },
      "CreateTicketPurchaseDto": {
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "amountPaid": {
            "type": "number"
          }
        },
        "required": [
          "ticketId",
          "personId",
          "orderId",
          "amountPaid"
        ]
      },
      "CreateManyTicketPurchaseDto": {
        "type": "object",
        "properties": {
          "purchases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTicketPurchaseDto"
            }
          }
        },
        "required": [
          "purchases"
        ]
      },
      "UpdateTicketPurchaseDto": {
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "amountPaid": {
            "type": "number"
          }
        }
      },
      "CreateEventDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "venueId": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "primaryImageUrl": {
            "type": "string"
          },
          "coverImageUrl": {
            "type": "string"
          },
          "imageGalleryUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "title",
          "venueId",
          "startDateTime",
          "endDateTime",
          "timezone"
        ]
      },
      "UpdateEventDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "organizerId": {
            "type": "string"
          },
          "venueId": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "primaryImageUrl": {
            "type": "string"
          },
          "coverImageUrl": {
            "type": "string"
          },
          "imageGalleryUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateOrganizationInvitationDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "super_admin",
              "admin",
              "member"
            ]
          }
        },
        "required": [
          "email",
          "role"
        ]
      }
    }
  }
}